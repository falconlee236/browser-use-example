 SystemMessage 
You are an AI agent designed to automate browser tasks. Your goal is to accomplish the ultimate task following the rules.

# Input Format
Task
Previous steps
Current URL
Open Tabs
Interactive Elements
[index]<type>text</type>
- index: Numeric identifier for interaction
- type: HTML element type (button, input, etc.)
- text: Element description
Example:
[33]<button>Submit Form</button>

- Only elements with numeric indexes in [] are interactive
- elements without [] provide only context

# Response Rules
1. RESPONSE FORMAT: You must ALWAYS respond with valid JSON in this exact format:
{"current_state": {"evaluation_previous_goal": "Success|Failed|Unknown - Analyze the current elements and the image to check if the previous goals/actions are successful like intended by the task. Mention if something unexpected happened. Shortly state why/why not",
"memory": "Description of what has been done and what you need to remember. Be very specific. Count here ALWAYS how many times you have done something and how many remain. E.g. 0 out of 10 websites analyzed. Continue with abc and xyz",
"next_goal": "What needs to be done with the next immediate action"},
"action":[{"one_action_name": {// action-specific parameter}}, // ... more actions in sequence]}

2. ACTIONS: You can specify multiple actions in the list to be executed in sequence. But always specify only one action name per item. Use maximum {max_actions} actions per sequence.
Common action sequences:
- Form filling: [{"input_text": {"index": 1, "text": "username"}}, {"input_text": {"index": 2, "text": "password"}}, {"click_element": {"index": 3}}]
- Navigation and extraction: [{"go_to_url": {"url": "https://example.com"}}, {"extract_content": {"goal": "extract the names"}}]
- Actions are executed in the given order
- If the page changes after an action, the sequence is interrupted and you get the new state.
- Only provide the action sequence until an action which changes the page state significantly.
- Try to be efficient, e.g. fill forms at once, or chain actions where nothing changes on the page
- only use multiple actions if it makes sense.

3. ELEMENT INTERACTION:
- Only use indexes of the interactive elements
- Elements marked with "[]Non-interactive text" are non-interactive

4. NAVIGATION & ERROR HANDLING:
- If no suitable elements exist, use other functions to complete the task
- If stuck, try alternative approaches - like going back to a previous page, new search, new tab etc.
- Handle popups/cookies by accepting or closing them
- Use scroll to find elements you are looking for
- If you want to research something, open a new tab instead of using the current tab
- If captcha pops up, try to solve it - else try a different approach
- If the page is not fully loaded, use wait action

5. TASK COMPLETION:
- Use the done action as the last action as soon as the ultimate task is complete
- Dont use "done" before you are done with everything the user asked you, except you reach the last step of max_steps. 
- If you reach your last step, use the done action even if the task is not fully finished. Provide all the information you have gathered so far. If the ultimate task is completly finished set success to true. If not everything the user asked for is completed set success in done to false!
- If you have to do something repeatedly for example the task says for "each", or "for all", or "x times", count always inside "memory" how many times you have done it and how many remain. Don't stop until you have completed like the task asked you. Only call done after the last step.
- Don't hallucinate actions
- Make sure you include everything you found out for the ultimate task in the done text parameter. Do not just say you are done, but include the requested information of the task. 

6. VISUAL CONTEXT:
- When an image is provided, use it to understand the page layout
- Bounding boxes with labels on their top right corner correspond to element indexes

7. Form filling:
- If you fill an input field and your action sequence is interrupted, most often something changed e.g. suggestions popped up under the field.

8. Long tasks:
- Keep track of the status and subresults in the memory. 

9. Extraction:
- If your task is to find information - call extract_content on the specific pages to get and store the information.
Your responses must be always JSON with the specified format.

 HumanMessage 
Your ultimate task is: """
2025년 5월 15일에 서울에서 부산가는 기차표를 2매 예약해줘.
그러기 위해서는 로그인을 하고 열차를 조회한다음에 좌석을 찾아야겠지?

나는 창가자리가 좋지만 창가 자리가 없으면 상관 없어.
하지만 두 좌석이 붙어 있어야해.
시각은 저녁시간대면 좋겠고 그런 기차표가 없다면 다른 날짜를 찾아서라도 구해와.

그리고 로그인을 한다면 휴대폰 번호로 로그인할거야. 정보는 다음과 같아
전화번호 = x_number
비밀번호 = x_password
""". If you achieved your ultimate task, stop everything and use the done action in the next step to complete the task. If not, continue as usual.

 HumanMessage 
Here are placeholders for sensitve data: ['x_number', 'x_password']To use them, write <secret>the placeholder name</secret>

 HumanMessage 
Example output:

 AIMessage 


 ToolMessage 
Browser started

 HumanMessage 
[Your task history memory starts here]

 HumanMessage 
Action result: 🔗  Opened new tab with https://www.korail.com/ticket/main

 HumanMessage 
Action result: 🔍  Scrolled down the page by 1000 pixels

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🔍  Scrolled up the page by 1000 pixels

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 4: 로그인

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 24: 휴대폰 번호

 AIMessage 
```tool_code
print(default_api.AgentOutput(action = [{"type_text": {"element_index": 28, "text": "<secret>x_number</secret>"}}, {"type_text": {"element_index": 29, "text": "<secret>x_password</secret>"}}, {"click_element": {"index": 30}}], current_state = {"evaluation_previous_goal": "Success - Switched to phone number login.", "memory": "I am on the Korail login page. I need to enter my phone number (<secret>x_number</secret>) and password (<secret>x_password</secret>) and then click the login button to proceed.", "next_goal": "Enter phone number, enter password, and click the login button."}))
```

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ⌨️  Input sensitive data into index 28

 HumanMessage 
Action result: ⌨️  Input sensitive data into index 29

 HumanMessage 
Action result: 🖱️  Clicked button with index 30: 로그인

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 34: 출발일 선택

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ⌨️  Sent keys: Escape

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🔍  Scrolled down the page by one page

 AIMessage 
```tool_code
print(default_api.AgentOutput(action = [{"click_element": {"index": 28}}], current_state = {"evaluation_previous_goal": "Success - I closed the non-interactive calendar pop-up. The train ticket booking form is visible.", "memory": "I am logged in to Korail. The task is to book 2 train tickets from Seoul (서울) to Busan (부산) for May 15th, 2025, evening time, with adjacent seats (window preferred). The booking form is visible. I need to select the departure date.", "next_goal": "Click the departure date input to open the calendar."}))
```

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 28: 출발일 선택

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 35: 출발일 선택

 AIMessage 


 ToolMessage 


 HumanMessage 
Action error: Error executing action click_element: Element with index 32 does not exist - retry or use alternative actions

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ⌨️  Sent keys: Escape

 AIMessage 
```json
{
    "state_analysis": "I am logged in to the Korail website, and the calendar pop-up is currently displayed. I previously tried to interact with the calendar, but the elements were not recognized. I've closed the pop-up with Escape.",
    "progress_evaluation": "20% - I've successfully logged in. The next step is to select the date and other booking details.",
    "challenges": "The calendar elements are not easily selectable using the element indices. I need to figure out how to select the date of travel.",
    "next_steps": [
        "Click the departure date input again to re-open the calendar.",
        "If the calendar elements are still not directly selectable by index, try scrolling the page to see if the calendar elements become interactive.",
        "If scrolling doesn't work, try to use alternative methods to select the date."
    ],
    "reasoning": "Since I was not able to interact with the date selection calendar elements, I will try opening the calendar again to see if the element list has changed or if there is a way to make it interactable. If not, I will try some alternative methods."
}
```

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ⌨️  Sent keys: Escape

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 19: Next

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 50: 15

 HumanMessage 
Action result: 🖱️  Clicked button with index 79: 18시

 HumanMessage 
Action result: 🖱️  Clicked button with index 86: 적용

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 36: 인원 선택

 AIMessage 
```tool_code
print(default_api.AgentOutput(action = [{"click_element": {"index": 40}}], current_state = {"evaluation_previous_goal": "Success - The passenger selection pop-up is open.", "memory": "I am logged in to Korail. The task is to book 2 train tickets from Seoul (서울) to Busan (부산) for May 15th, 2025, evening time (selected 18:00), with adjacent seats (window preferred). Departure/Arrival stations and date/time are set. I need to select 2 passengers.", "next_goal": "Click the '+' button next to '어른(13세 이상)' to increase the number of adult passengers to 2."}))
```

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🔍  Scrolled down the page by 200 pixels

 AIMessage 


 ToolMessage 


 HumanMessage 
Action error: Error executing action click_element: Element with index 40 does not exist - retry or use alternative actions

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🔍  Scrolled down the page by one page

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 29:

 HumanMessage 
Action result: 🖱️  Clicked button with index 49: 적용

 AIMessage 
```json
{
    "state_analysis": "I have selected the departure date and time, and the number of adult passengers (2). The passenger selection pop-up is open, confirming the selection. A confirmation dialog is also open.",
    "progress_evaluation": "50% - I have successfully logged in, selected the date, time, and number of passengers. I'm at the final step of confirming the passenger selection.",
    "challenges": "I need to confirm the passenger selection.",
    "next_steps": [
        "Click the 'Yes' button (예) in the confirmation dialog to confirm the passenger selection.",
        "If the confirmation dialog doesn't work, try clicking the 'Apply' button again."
    ],
    "reasoning": "I need to confirm the selected number of passengers. The confirmation dialog has appeared, and I will confirm the selection by clicking 'Yes'."
}
```

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 28: 예

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 37: 열차 조회하기

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: 🖱️  Clicked button with index 20: 2025-04-03(목) 18:00

 AIMessage 


 ToolMessage 


 HumanMessage 
Action result: ⌨️  Sent keys: Escape

 AIMessage 
```json
{
    "state_analysis": "I am on the train search results page, but the results are for April 3rd, 2025. I need to re-select the date. The calendar pop-up is open, showing April 2025, but the month navigation buttons are not available for interaction.",
    "progress_evaluation": "60% - I have successfully logged in, and selected the date, time, and number of passengers, but the date selection was not applied correctly. I am now re-attempting to select the date.",
    "challenges": "The calendar elements are not always interactable. I need to find a reliable way to select the date.",
    "next_steps": [
        "Click the date selection button again to open the calendar.",
        "If the calendar elements are still not directly selectable by index, try scrolling the page to see if the calendar elements become interactive.",
        "If scrolling doesn't work, try to use alternative methods to select the date (e.g. OCR the date from the screen and use it as a prompt)."
    ],
    "reasoning": "The initial date selection failed, so I need to repeat that step. I will re-open the date selection calendar and attempt the date selection again."
}
```

 HumanMessage 
[Task history memory ends]
[Current state starts here]
The following is one-time information - if you need to remember it write it to memory:
Current url: https://www.korail.com/ticket/search/list
Available tabs:
[TabInfo(page_id=0, url='about:blank', title=''), TabInfo(page_id=1, url='https://www.korail.com/ticket/search/list', title='열차 목록>승차권 예매>예매>승차권')]
Interactive elements from top layer of the current page inside the viewport:
[Start of page]
본문 바로가기
[0]<a 주메뉴 바로가기/>
한국철도
승차권예매
기차여행
로그아웃
장바구니
마이페이지
고객센터
기업전용
승차권
철도역·열차
고객서비스
코레일멤버십
승차권 예매
홈
예매
승차권 예매
이전날
2025-04-03(목) 18:00
다음날
출발역
서울
출발지/도착지 전환
도착역
부산
인원 선택 총 2명
일반석
직통
왕복
인접역 포함
SR연계 포함
전체
KTX/KTX-산천
새마을호/ITX-새마을
무궁화호/누리로
ITX-청춘
KTX
055
서울
→
부산
(
18:13
~
20:54
)
소요시간
:
2시간 41분
일반실
59,800원
5%적립
특실(매진임박)
83,700원
5%적립
KTX
057
서울
→
부산
(
18:24
~
21:13
)
소요시간
:
2시간 49분
일반실
59,800원
5%적립
특실
83,700원
5%적립
KTX
107
서대구,구포정차
서울
→
부산
(
18:41
~
22:05
)
소요시간
:
3시간 24분
일반실
53,500원
5%적립
매진
KTX
127
수원정차
서울
→
부산
(
18:53
~
22:13
)
소요시간
:
3시간 20분
일반실
48,800원
5%적립
특실
68,300원
5%적립
KTX
059
서울
→
부산
(
18:58
~
21:38
)
소요시간
:
2시간 40분
일반실
59,800원
5%적립
특실(매진임박)
83,700원
5%적립
KTX
061
서울
→
부산
(
19:35
~
22:09
)
소요시간
:
2시간 34분
일반실
59,800원
5%적립
특실(매진임박)
83,700원
5%적립
KTX
063
서울
→
부산
(
19:58
~
22:37
)
소요시간
:
2시간 39분
[1]<a 일반실
59,800원
5%적립/>
[2]<a 좌석부족/>
ITX-새마을
1013
서울
→
부산
(
20:18
~
00:57
)
소요시간
:
4시간 39분
[3]<a 일반실
42,600원/>
-
KTX
065
서대구정차
서울
→
부산
(
20:28
~
23:00
)
소요시간
:
2시간 32분
[4]<a 일반실
59,400원
5%적립/>
[5]<a 특실(매진임박)
83,200원
5%적립/>
KTX
109
서대구,구포정차
서울
→
부산
(
20:49
~
00:02
)
소요시간
:
3시간 13분
[6]<a 일반실
53,500원
5%적립/>
[7]<a 특실
74,900원
5%적립/>
[8]<a 더보기/>
[9]<button 다음날
(
25년04월04일
)
조회/>
... 809 pixels below - scroll or extract content to see more ...
Current step: 24/500Current date and time: 2025-04-03 16:05

 RESPONSE
{
  "current_state": {
    "evaluation_previous_goal": "Unknown - The calendar pop-up is visible in the screenshot, showing April 2025, but its interactive elements (month navigation, days, time, apply button) are not listed in the interactive elements. This happened before.",
    "memory": "I am logged in to Korail. The task is to book 2 train tickets from Seoul (\uc11c\uc6b8) to Busan (\ubd80\uc0b0) for May 15th, 2025, evening time, for 2 adults, with adjacent seats (window preferred). The previous date selection (May 15th) was not applied correctly, and the search results were for April 3rd. I tried opening the calendar again, but its elements are not interactable in the current list.",
    "next_goal": "Close the calendar pop-up using the Escape key, as its elements are not interactable."
  },
  "action": [
    {
      "send_keys": {
        "keys": "Escape"
      }
    }
  ]
}